#!/bin/bash

set -o nounset -o errexit -o pipefail -o noglob

usage() {
    cat <<\EOF
`meteor-run2` starts one mongod and uses two separate dbs for two meteor app
instances 'alice' and 'bob'.  Run `meteor-run2` in a Meteor app root directory
and follow the instructions.

EOF
    exit
}

[ $# -eq 0 ] || usage

if ! [ -d '.meteor' ]; then
    echo >&2 'Missing `.meteor` directory.'
    exit 1
fi

# Discover the mongo binaries in the Meteor installation.
xmongo="${HOME}/.meteor/$(dirname $(readlink ~/.meteor/meteor))/dev_bundle/mongodb/bin/mongo"
xmongod="${xmongo}d"

mongodPort=28017
alicePort=4000
bobPort=5000

echo "Will start mongod on port ${mongodPort}, alice on port ${alicePort}, bob on port ${bobPort}."
echo
echo 'You may see build problems, because both meteor app instances fight for'
echo 'the same build directory.  But it usually works well enough for testing.'
echo
echo "Connect with:"
echo
echo '```'
echo "${xmongo} localhost:${mongodPort}"
echo "open http://localhost:${alicePort}"
echo "open http://localhost:${bobPort}"
echo '```'
echo
echo "Any key to start mongod.  CTRL-C to break."
read

trap 'kill $(jobs -p)' EXIT

mkdir -p '.meteor/local/db_start2'
${xmongod} --port ${mongodPort} --dbpath ./.meteor/local/db_start2 |
sed -l -e 's/^/mongod: /' &

sleep 1
echo
echo "Any key to start app.  CTRL-C to break."
read

MONGO_URL="mongodb://127.0.0.1:${mongodPort}/nogalice/" \
meteor run --port ${alicePort} --settings _private/settings-localhost-alice.json |
sed -l -e 's/^/alice: /' &

MONGO_URL="mongodb://127.0.0.1:${mongodPort}/nogbob/" \
meteor run --port ${bobPort} --settings _private/settings-localhost-bob.json |
sed -l -e 's/^/bob: /' &


sleep 1000000000
